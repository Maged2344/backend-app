name: Backend Deployment

on:
  push:
    branches:
      - 11.x

jobs:
  run-script-on-ec2:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout the repository code
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up SSH Agent for accessing EC2
      - name: Set up SSH Agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          
      # Step 3: Run deployment script on the EC2 instance
      - name: Run Script on EC2
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.BACKEND_SERVER_IP }}
        run: |
          # SSH into the EC2 instance and run the deployment commands
          ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
            # Navigate to the Laravel app directory
            cd /var/www/backend-app

            # Pull the latest changes from the '11.x' branch
            echo "Pulling latest changes from the 11.x branch"
            git pull origin 11.x

            # Install Composer dependencies (without dev dependencies, and optimize the autoloader)
            echo "Installing Composer dependencies"
            sudo composer install --no-dev --optimize-autoloader

            # Run database migrations with --force for production
            echo "Running database migrations"
            sudo php artisan migrate --force

            # Clear and cache config, routes, and views
            echo "Caching Laravel configurations and routes"
            sudo php artisan config:cache
            sudo php artisan route:cache
            sudo php artisan view:cache

            # Set correct permissions for storage and cache directories
            echo "Setting permissions for storage and cache"
            sudo chown -R www-data:www-data /var/www/backend-app/storage /var/www/backend-app/bootstrap/cache
            sudo chmod -R 775 /var/www/backend-app/storage /var/www/backend-app/bootstrap/cache
            php artisan serve --host=0.0.0.0 --port=8000

          EOF
